<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:sys="clr-namespace:System;assembly=mscorlib"  
                    xmlns:local="clr-namespace:ExCommonControlsCore.ExControls">



    <SolidColorBrush x:Key="IndexColor">#FF1E2E3D</SolidColorBrush>

    <SolidColorBrush x:Key="ButtonBackgroundColor">#FF3399FF</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonMouseOverBackgroundColor">#FF71B5f9</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonMousePressedBackgroundColor">#FF3399FF</SolidColorBrush>

    <SolidColorBrush x:Key="ButtonMouseOverForeground">#FFFFFFFF</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonForegroundColor">#FFFFFFFF</SolidColorBrush>

    <SolidColorBrush x:Key="ButtonBorderBrushColor">Transparent</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonMouseOverBorderBrushColor">Transparent</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonMousePressedBorderBrushColor">Transparent</SolidColorBrush>



    <SolidColorBrush x:Key="MenuForegroundColor">#FFC3CACF</SolidColorBrush>
    <SolidColorBrush x:Key="MenuMouseOverForegroundColor">#FF384550</SolidColorBrush>
    <!--<SolidColorBrush x:Key="MenuMouseOverBackgroundColor">#FFF1F2F6</SolidColorBrush>-->
    <SolidColorBrush x:Key="MenuMouseOverBackgroundColor">#FF364250</SolidColorBrush>


    <SolidColorBrush x:Key="MenuMousePressedForegroundColor">#FF384550</SolidColorBrush>

    <SolidColorBrush x:Key="MenuMousePressedBackgroundColor">#FFF1F2F6</SolidColorBrush>



    <SolidColorBrush x:Key="IndexForegroundColor">#FFCFDAE7</SolidColorBrush>

    <!--<SolidColorBrush x:Key=" IndexSelectedForegroundColor">#FF1E2E3E</SolidColorBrush>-->
    <SolidColorBrush x:Key="IndexSelectedForegroundColor">#FF1E2E3E</SolidColorBrush>






    <!--系统主题色-->
    <SolidColorBrush x:Key="System.Theme.Color" Color="#FF3399FF"/>
    <SolidColorBrush x:Key="System.Theme.Foreground" Color="#FF1E2E3E"/>


    <sys:Double x:Key="MenuContainerTargetWidth">180</sys:Double>
    <sys:Double x:Key="MenuContainerInitWidth">50</sys:Double>
    <sys:Double x:Key="MenuItemHeight">40</sys:Double>

    <PathGeometry x:Key="MenuIcon" Figures="M127.9 168.9h768v46h-768zM127.2 809.1h768v46h-768zM408.1 495.5h488.7v46H408.1zM317.6 346.3L130.1 
                          522.6l187.5 176.3V346.3z m-46 246.2l-74.3-69.9 74.3-69.9v139.8z"/>


    <FontFamily x:Key="FontFamily">pack://application:,,,/ExCommonControlsCore;component/Assets/Fonts/#iconfont</FontFamily>

    <ControlTemplate x:Key="ArrowButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid Background="Transparent" Name="back">
            <TextBlock Text="&#xe637;" FontFamily="{StaticResource FontFamily}" FontSize="14"
                       VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0" 
                       RenderTransformOrigin="0.5,0.5" Name="arrow" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="RenderTransform" TargetName="arrow">
                    <Setter.Value>
                        <RotateTransform Angle="90"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="menuTreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource IndexForegroundColor}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Background="Transparent" Name="root">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="36"/>
                            <RowDefinition  />
                        </Grid.RowDefinitions>
                        <Grid.InputBindings>
                            <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding OpenViewCommand}"/>
                        </Grid.InputBindings>

                        <Border Name="bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0" Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True" UseLayoutRounding="True">
                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path Name="path" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                 Fill="{TemplateBinding Foreground}"  Stroke="{TemplateBinding Foreground}" 
                                                      Data="{Binding MenuIcon}"
                                                     Stretch="Uniform"/>
                                <Grid Grid.Column="1">
                                    <TextBlock Name="txt" Text="{Binding Header}" Visibility="Visible"
                                                     Foreground="{TemplateBinding Foreground}" Margin="5,0,10,0" 
                                                    HorizontalAlignment="Left" VerticalAlignment="Center">
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </Border>
                        <ToggleButton x:Name="Expander"
                                      ClickMode="Press" Foreground="{Binding ElementName=txt,Path=Foreground}"
                                      Visibility="Visible"
                                      IsChecked="{Binding IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                      Template="{StaticResource ArrowButtonTemplate}"/>


                        <ItemsPresenter x:Name="ItemsHost" Margin="5,0,0,0" Grid.ColumnSpan="2" Grid.Row="1" Visibility="Visible"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:ExMenuContainer,Mode=FindAncestor},Path=Width}" Value="50">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </DataTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background"  Value="{StaticResource MenuMousePressedBackgroundColor}"/>
                            <Setter Property="Foreground"  Value="{StaticResource IndexSelectedForegroundColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsSelected" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"  Value="{StaticResource MenuMouseOverBackgroundColor}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource MenuMousePressedBackgroundColor}"/>
                            <Setter Property="Foreground"  Value="{StaticResource IndexSelectedForegroundColor}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type local:ExMenuContainer}">
        <Setter Property="Background" Value="{StaticResource IndexColor}"/>
        <Setter Property="Width" Value="{StaticResource MenuContainerInitWidth}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExMenuContainer}">
                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                            SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="Transparent"
                            BorderThickness="0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="50"/>
                            </Grid.RowDefinitions>
                            <Grid Background="Transparent">
                                <TreeView Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0"
                                          VerticalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ItemsSource="{Binding Menus,RelativeSource={RelativeSource AncestorType=local:ExMenuContainer,Mode=FindAncestor}}"
                                          ItemContainerStyle="{StaticResource menuTreeViewItem}">
                                   
                                    <TreeView.ItemTemplate>
                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                        </HierarchicalDataTemplate>
                                    </TreeView.ItemTemplate>
                                </TreeView>
                            </Grid>
                            <Border Grid.Row="1" Background="Transparent"
                                    BorderThickness="0,1,0,0" BorderBrush="Gray">
                                <Button>
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border Name="border" Background="Transparent"
                                                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" 
                                                                BorderBrush="Transparent">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="50" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>
                                                                <Path Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                Fill="{StaticResource MenuForegroundColor}" 
                                                                      Stroke="{StaticResource MenuForegroundColor}" Data="{StaticResource MenuIcon}"
                                                                Stretch="Uniform"/>
                                                                <TextBlock Grid.Column="1" Name="txt" 
                                                                           Text="菜单" Visibility="Visible"
                                                                 Foreground="{StaticResource MenuForegroundColor}" Margin="5,0,10,0" 
                                                                     HorizontalAlignment="Left" VerticalAlignment="Center">
                                                                </TextBlock>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" TargetName="border" Value="#FF364250"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Background" TargetName="border" Value="#FF4F5B66"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter  Property="Width" Value="{StaticResource MenuContainerTargetWidth}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>
