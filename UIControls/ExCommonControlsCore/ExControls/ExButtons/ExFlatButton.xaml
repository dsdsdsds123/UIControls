<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ExCommonControlsCore.ExControls.ExButtons">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ExCommonControlsCore;component/Themes/ThemeColor.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="DefaultButtonTemplate" TargetType="{x:Type local:ExFlatButton}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"
                SnapsToDevicePixels="True" UseLayoutRounding="True"
            >
            <Border.OpacityMask>
                <SolidColorBrush Color="#FF000000"/>
            </Border.OpacityMask>
            <AdornerDecorator>
                <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" RecognizesAccessKey="True"
                                  SnapsToDevicePixels="True" UseLayoutRounding="True"/>
            </AdornerDecorator>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStatus">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.OpacityMask).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.OpacityMask).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#AA000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.OpacityMask).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver"  Value="true">
                <!--<Setter Property="Cursor" Value="Hand"/>-->
                <!--<Setter TargetName="border" Property="Background" 
                        Value="{Binding  RelativeSource={RelativeSource TemplatedParent},Path=MouseOverBackground}"/>
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground"
                        Value="{Binding  RelativeSource={RelativeSource TemplatedParent},Path=MouseOverForeground}"/>-->
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="contentPresenter" Property="Margin" Value="0"/>
                <!--<Setter TargetName="border" Property="Background" 
                        Value="{Binding  RelativeSource={RelativeSource TemplatedParent},Path=MousePressedBackground}"/>
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" 
                        Value="{Binding  RelativeSource={RelativeSource TemplatedParent},Path=MousePressedForeground}"/>-->

            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Background" Value="{StaticResource DisableBackground}"/>
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisableBorderBrush}"/>
                <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource DisableForeground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="GhostButtonTemplate" TargetType="{x:Type local:ExFlatButton}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"
                SnapsToDevicePixels="True" UseLayoutRounding="True"
            >
            <Border.OpacityMask>
                <SolidColorBrush Color="#FF000000"/>
            </Border.OpacityMask>
            <AdornerDecorator>
                <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" RecognizesAccessKey="True"
                                  SnapsToDevicePixels="True" UseLayoutRounding="True"/>
            </AdornerDecorator>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStatus">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation Duration="00:00:0.2" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                            To="#C3C6C9" />
                            <ColorAnimation Duration="00:00:0.2" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="#657180" />
                            <ColorAnimation Duration="00:00:0.2" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="#F7F7F7" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="00:00:0.2" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                            To="#5CADFF" />
                            <ColorAnimation Duration="00:00:0.2" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="#5CADFF" />
                            <ColorAnimation Duration="00:00:0.2" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="#FFFFFF" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="00:00:0.3" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                            To="#3091F2" />
                            <ColorAnimation Duration="00:00:0.3" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="#3091F2" />
                            <ColorAnimation Duration="0" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#FFFFFF" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="contentPresenter" Property="Margin" Value="0,3,0,0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Background" Value="{StaticResource DisableBackground}"/>
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisableBorderBrush}"/>
                <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource DisableForeground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="{x:Type local:ExFlatButton}">
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource ButtonMouseOverBackground}"/>
        <Setter Property="MouseOverForeground" Value="{StaticResource ButtonMouseOverForeground}"/>
        <Setter Property="MousePressedBackground" Value="{StaticResource ButtonMousePressedBackground}"/>
        <Setter Property="MousePressedForeground" Value="{StaticResource ButtonMousePressedForeground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Content" Value="Button"/>
        <Setter Property="Type" Value="Default"/>
        <Setter Property="Template" Value="{StaticResource DefaultButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="Type" Value="Ghost">
                <Setter Property="BorderBrush" Value="#c3c6c9"/>
                <Setter Property="Foreground" Value="#657180"/>
                <Setter Property="Background" Value="#FFFFFF"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template" Value="{StaticResource GhostButtonTemplate}"/>
            </Trigger>
            <Trigger Property="Type" Value="Text">
                <Setter Property="BorderBrush" Value="#c3c6c9"/>
                <Setter Property="Foreground" Value="#657180"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="Type" Value="Info">
                <Setter Property="Background" Value="#2db7f5"/>
            </Trigger>
            <Trigger Property="Type" Value="Success">
                <Setter Property="Background" Value="#00cc66"/>
            </Trigger>
            <Trigger Property="Type" Value="Error">
                <Setter Property="Background" Value="#ff5500"/>
            </Trigger>
            <Trigger Property="Type" Value="Warning">
                <Setter Property="Background" Value="#ff9900"/>
            </Trigger>
        </Style.Triggers>

    </Style>

</ResourceDictionary>
