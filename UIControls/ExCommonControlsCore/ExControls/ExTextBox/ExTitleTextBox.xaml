<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ExCommonControlsCore.ExConverters"
                    xmlns:local="clr-namespace:ExCommonControlsCore.ExControls.ExTextBox">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ExCommonControlsCore;component/Assets/PathResources/PathGeometryResources.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/ExCommonControlsCore;component/ExStyles/ExSpecialScroviewerStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFDEDEDE"/>
    <!--<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FFBEBEBE"/>-->
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#AA5DA9E9"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF5DA9E9"/>



    <Style TargetType="{x:Type local:ExTitleTextBox}">
        <Setter Property="MinHeight" Value="30"/>
       
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Padding" Value="2,0,2,0"/>
        <Setter Property="Title" Value="标题:"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExTitleTextBox}">
                    <Border x:Name="border"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="5,0,0,0" x:Name="PART_Title"
                                       VerticalAlignment="Center"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Foreground="#FF9A9A9A"
                                       Text="{TemplateBinding Title}"
                                       Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},Path=ShowTitle,Converter={StaticResource BooleanToVisibilityConverter}}"/>


                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1"
                                          Margin="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>

                            <Border Background="Transparent"
                                Grid.Column="2" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},Path=CanClear,Converter={StaticResource BooleanToVisibilityConverter}}"
                                    >
                                <Path x:Name="PART_Clear" Width="15" Margin="0,0,4,0" Data="{StaticResource Icon_Delete}"
                                      Fill="{StaticResource TextBox.Focus.Border}" Stretch="Uniform">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}">
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="True" />
                                                        <Condition Binding="{Binding Text.IsEmpty, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="True" />
                                                        <Condition Binding="{Binding Text.IsEmpty, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="False" />
                                                        <Condition Binding="{Binding Text.IsEmpty, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="False" />
                                                        <Condition Binding="{Binding Text.IsEmpty, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="True" />
                                                        <Condition Binding="{Binding Text.IsEmpty, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="True" />
                                                        <Condition Binding="{Binding Text.IsEmpty, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExTitleTextBox}}}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="border" Value="gray"/>
                            <Setter Property="Title" Value="禁用"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




</ResourceDictionary>
