<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ExCommonControlsCore.ExControls">


    <Style x:Key="toggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent" >
                        <Viewbox Width="35" Height="35" VerticalAlignment="Center" HorizontalAlignment="Right">
                            <Border Width="24" Height="24" Margin="0,0,10,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" RenderTransformOrigin="0.5,0.5"
                            SnapsToDevicePixels="True" UseLayoutRounding="True">
                                <Polyline Points="8,6 16,12 8,18" Stroke="{TemplateBinding Foreground}" StrokeThickness="2">
                                </Polyline>
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform x:Name="rt" Angle="0"/>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="bs">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"
                                                         To="90" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="bs"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="bsb">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"
                                                         To="0" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="bsb"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style  TargetType="{x:Type local:ExExpander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HeaderBackground" Value="#AA306767" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExExpander}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{TemplateBinding CornerRadius}" SnapsToDevicePixels="true" UseLayoutRounding="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!--Background="#44304545"-->
                            <!--<Border Background="{TemplateBinding HeaderBackground}"
                                 x:Name="border" CornerRadius="2,2,0,0" Grid.Column="0" Grid.ColumnSpan="2">
                                <local:ExAnimationButton Background="Transparent" x:Name="HeaderSite" Grid.Column="0" Grid.ColumnSpan="2"
                                                 HorizontalContentAlignment="Right" Padding="0,0,10,0"
                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 Height="30"  Foreground="{TemplateBinding Foreground}"
                                                 IsChecked="{Binding IsExpanded,
                                                                     Mode=TwoWay,
                                                                     RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>-->
                            <Border Background="{TemplateBinding HeaderBackground}"  MinHeight="35"
                                 x:Name="border" CornerRadius="2,2,0,0" Grid.Column="0" Grid.ColumnSpan="2">
                                <ToggleButton Background="Transparent" VerticalAlignment="Stretch" x:Name="HeaderSite"
                                    Style="{StaticResource toggleButtonStyle}" HorizontalAlignment="Stretch" Width="{TemplateBinding Width}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Foreground="{TemplateBinding Foreground}"/>
                            </Border>


                            <ContentPresenter Grid.ColumnSpan="1" IsHitTestVisible="False" Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              VerticalAlignment="Center" Margin="0,0,0,0"/>

                            <ContentPresenter x:Name="ExpandSite" Grid.Row="1" Grid.ColumnSpan="2"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="False" Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderSite" Property="IsChecked" Value="False">
                            <!--<Setter  TargetName="border" Property="Background" Value="Transparent"/>-->
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





</ResourceDictionary>
