<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ExCommonControlsCore.ExControls">



    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDBB377" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

    <SolidColorBrush x:Key="Button.Checked.Foreground" Color="#FF76E8A6" />


    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>








    <Style TargetType="{x:Type local:ExSwitch}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource Button.Pressed.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <!--<Setter Property="Tag" Value="开"/>-->
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="25" />
        <Setter Property="ShowTip" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExSwitch}">
                    <Grid>

                        <Border x:Name="border"
                                Background="{StaticResource Button.Pressed.Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12" SnapsToDevicePixels="true" UseLayoutRounding="True" />
                        <Border x:Name="InnerBd" Width="20" Height="20" Margin="3,0"
                                HorizontalAlignment="Left" VerticalAlignment="Center" Background="White" CornerRadius="100"
                                RenderTransformOrigin="0.5,0.5">

                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                        <TextBlock Text="开" x:Name="txt" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="Left" 
                                   Visibility="{TemplateBinding ShowTip,Converter={StaticResource BooleanToVisibilityConverter}}"
                                   VerticalAlignment="Center" Margin="13,0,0,0"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InnerBd" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="33">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#FFC4E5F6">
                                                <EasingColorKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </EasingColorKeyFrame.EasingFunction>
                                            </EasingColorKeyFrame>
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF76E8A6">
                                                <EasingColorKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </EasingColorKeyFrame.EasingFunction>
                                            </EasingColorKeyFrame>
                                        </ColorAnimationUsingKeyFrames>

                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="txt" Storyboard.TargetProperty="Margin">
                                            <EasingThicknessKeyFrame KeyTime="0:0:0" Value="33,0,0,0"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="13,0,0,0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="txt" Storyboard.TargetProperty="Text">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:ExSwitch}},Path=UncheckedTip}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:ExSwitch}},Path=CheckedTip}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InnerBd" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="22">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimation BeginTime="00:00:00" Duration="0:0:0.2" From="#FF76E8A6" 
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                        To="#FFC4E5F6" />

                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="txt" Storyboard.TargetProperty="Margin">
                                            <EasingThicknessKeyFrame KeyTime="0:0:0" Value="13,0,0,0"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="33,0,0,0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="txt" Storyboard.TargetProperty="Text">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:ExSwitch}},Path=CheckedTip}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:ExSwitch}},Path=UncheckedTip}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Text" TargetName="txt" Value="关"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
